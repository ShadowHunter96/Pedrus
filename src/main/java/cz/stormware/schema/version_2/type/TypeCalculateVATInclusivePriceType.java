//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.09.09 at 03:15:47 PM CEST 
//


package cz.stormware.schema.version_2.type;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCalculateVATInclusivePriceType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="typeCalculateVATInclusivePriceType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="VATNewMethod"/&gt;
 *     &lt;enumeration value="VATOriginalMethod"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCalculateVATInclusivePriceType")
@XmlEnum
public enum TypeCalculateVATInclusivePriceType {


    /**
     * Nový výpočet od 1.4.2019.
     * 
     */
    @XmlEnumValue("VATNewMethod")
    VAT_NEW_METHOD("VATNewMethod"),

    /**
     * Původní výpočet (s koef. na 4 des. místa).
     * 
     */
    @XmlEnumValue("VATOriginalMethod")
    VAT_ORIGINAL_METHOD("VATOriginalMethod");
    private final String value;

    TypeCalculateVATInclusivePriceType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCalculateVATInclusivePriceType fromValue(String v) {
        for (TypeCalculateVATInclusivePriceType c: TypeCalculateVATInclusivePriceType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
